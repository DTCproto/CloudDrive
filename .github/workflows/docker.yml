name: build docker

on:
  # you may only define up to 10 `inputs` for a `workflow_dispatch` event
  workflow_dispatch:
    inputs:
      go_drive_commit_id:
        description: "指定go-drive使用commit id版本"
        required: true
        default: "HEAD~0"
        type: string
      build_go_drive:
        description: "enable go-drive build"
        default: true
        type: boolean
      release_archives:
        description: "enable release archives"
        default: true
        type: boolean

jobs:
  build-base:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    # 同一个标签，不能多次push，会强制清空覆盖所有数据
    # strategy:
    #   matrix:
    #     os: [linux/amd64, linux/arm64]
    steps:
      - name: Free Disk-Space
        run: df -h && sudo apt-get clean && docker system prune -a -f && sudo rm -rf /usr/local/lib/android /usr/share/dotnet /opt/ghc && df -h

      - uses: actions/checkout@v5

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:qemu-v10.0.4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install APT dependencies
        uses: awalsh128/cache-apt-pkgs-action@v1
        with:
          packages: git curl wget

      - name: get short hash
        run: |
          mkdir -p ${{ github.workspace }}/temp/
          cd ${{ github.workspace }}/temp/
          git clone https://github.com/devld/go-drive.git
          cd ${{ github.workspace }}/temp/go-drive/
          git checkout --force --quiet ${{ inputs.go_drive_commit_id }}
          echo "go_drive_build_version=$(git rev-parse --short HEAD)" >> "$GITHUB_ENV"

      #- name: init
      #  run: |
      #    cp -rf ${{ github.workspace }}/conf/* ${{ github.workspace }}/mainline/
      #    ls ${{ github.workspace }}/mainline/

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Login to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: set lower case name
        run: |
          echo "ACTOR_LC=${ACTOR,,}" >>${GITHUB_ENV}
          echo "REPOSITORY_LC=${REPOSITORY,,}" >>${GITHUB_ENV}
        env:
          ACTOR: '${{ github.actor }}'
          REPOSITORY: '${{ github.repository }}'

      # 自动标签
      #- name: Extract metadata (tags, labels) for Docker
      #  id: meta
      #  uses: docker/metadata-action@v5
      #  with:
      #    images: |
      #      ${{ secrets.DOCKERHUB_USERNAME }}/nginx
      #      ghcr.io/${{ github.repository }}

      - name: Build And Push (go-drive)
        if: ${{ inputs.build_go_drive }}
        uses: docker/build-push-action@v6
        with:
          context: ${{ github.workspace }}/go-drive/
          file: ${{ github.workspace }}/go-drive/alpine.Dockerfile
          platforms: |
            linux/amd64
            linux/arm64
          build-args: |
            GO_DRIVE_COMMIT_ID=${{ inputs.go_drive_commit_id }}
          push: ${{ inputs.release_archives }}
          provenance: false
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/go-drive:${{ env.go_drive_build_version }}-alpine
            ${{ secrets.DOCKERHUB_USERNAME }}/go-drive:alpine
            ${{ secrets.DOCKERHUB_USERNAME }}/go-drive:latest
            ghcr.io/${{ env.ACTOR_LC }}/go-drive:${{ env.go_drive_build_version }}-alpine
            ghcr.io/${{ env.ACTOR_LC }}/go-drive:alpine
            ghcr.io/${{ env.ACTOR_LC }}/go-drive:latest
          cache-from: type=registry,ref=ghcr.io/${{ env.ACTOR_LC }}/go-drive:latest
          cache-to: type=inline
